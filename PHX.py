from ctypes import c_int, c_uint32

# /* API & Library function parameter definitions
#  * ============================================
# _FnTypes()
# */
class etFnTypes:
    FNTYPE_EMASK = c_int(0xF0000000).value

    FNTYPE_PHA_API = c_int(0x00000000).value
    FNTYPE_PHA_LIB = c_int(0x10000000).value
    FNTYPE_PHC_API = c_int(0x20000000).value
    FNTYPE_PHC_LIB = c_int(0x30000000).value
    FNTYPE_PHD_API = c_int(0x40000000).value
    FNTYPE_PHD_LIB = c_int(0x50000000).value
    FNTYPE_PDL_API = c_int(0x60000000).value
    FNTYPE_PDL_LIB = c_int(0x70000000).value
    FNTYPE_PCC_API = c_int(0x80000000).value
    FNTYPE_PCC_LIB = c_int(0x90000000).value

    FNTYPE_PHX_API = c_int(0xC0000000).value
    FNTYPE_PHX_LIB = c_int(0xD0000000).value

# /* PHX_Function Definitions
#  * ========================
#  * These enums are used as magic numbers for all parameters passed to the specific functions,
#  * ie any parameter passed to the Acquisition functions will have the top 8 bits set to 3.
#  * This is used to confirm that the parameter passed is valid for the function.
#  */

class etPhxFn:
    PHX_EMASK_FN = c_int(etFnTypes.FNTYPE_EMASK | 0x000F0000).value
    PHX_CAMERACONFIG_LOAD = c_int(etFnTypes.FNTYPE_PHX_API | 0x00010000).value
    PHX_SETANDGET = c_int(etFnTypes.FNTYPE_PHX_API | 0x00020000).value
    PHX_ACQUIRE = c_int(etFnTypes.FNTYPE_PHX_API | 0x00030000).value
    PHX_ACTION = c_int(etFnTypes.FNTYPE_PHX_API | 0x00040000).value
    PHX_TEST = c_int(etFnTypes.FNTYPE_PHX_API | 0x00050000).value
    PHX_COM = c_int(etFnTypes.FNTYPE_PHX_API | 0x00060000).value
    PHX_PRE_OPEN = c_int(etFnTypes.FNTYPE_PHX_API | 0x00070000).value
    PHX_CONTROL = c_int(etFnTypes.FNTYPE_PHX_API | 0x00080000).value
    PHX_FBD_SETANDGET = c_int(etFnTypes.FNTYPE_PHX_API | 0x00090000).value
    PHX_CAN_SETANDGET = c_int(etFnTypes.FNTYPE_PHX_API | 0x000A0000).value
    PHX_PRIVATE_SETANDGET = c_int(etFnTypes.FNTYPE_PHX_API | 0x000B0000).value

    # For backwards compatibility
    PHX_CAMERACONFIG_SAVE = PHX_ACTION

# /* PHX_CameraConfigLoad Definitions
#  * ================================
#  */

class etCamConfigLoad:
    PHX_EMASK_BOARD = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0007).value
    PHX_BOARD_AUTO = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0000).value
    PHX_BOARD1 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0001).value
    PHX_BOARD2 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0002).value
    PHX_BOARD3 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0003).value
    PHX_BOARD4 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0004).value
    PHX_BOARD5 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0005).value
    PHX_BOARD6 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0006).value
    PHX_BOARD7 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0007).value
    PHX_BOARD_MAX = c_int(7).value

    PHX_EMASK_CHANNEL = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0030).value
    PHX_CHANNEL_AUTO = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0000).value
    PHX_CHANNEL_A = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0010).value
    PHX_CHANNEL_B = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0020).value
    PHX_CHANNEL_MAX = c_int(2).value
    PHX_CHANNEL_ONLY = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0040).value

    PHX_EMASK_MODE = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0280).value
    PHX_MODE_NORMAL = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0000).value
    PHX_COMMS_ONLY = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0080).value
    PHX_ACQ_ONLY = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0200).value

    PHX_EMASK_UPDATE = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0100).value
    PHX_UPDATE_FIRMWARE = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0100).value
    PHX_NO_RECONFIGURE = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0400).value

    PHX_EMASK_TYPE = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0xC000).value
    PHX_EMASK_VARIANT = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x3808).value
    PHX_TYPE_AUTO = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x0000).value
    PHX_DIGITAL = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x4000).value

    PHX_D24CL_PCI32 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x4800).value
    PHX_D24CL_PE1 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x4808).value
    PHX_D24AVDS_PE1 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x5008).value

    PHX_D32_PCI32 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x5000).value

    PHX_D36_PCI32 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x5800).value
    PHX_D36_PCI64 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x6000).value
    PHX_D36_PCI64U = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x6800).value
    PHX_D36_PE1 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x5808).value

    PHX_D10HDSDI_PE1 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x6808).value
    PHX_D20HDSDI_PE1 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x6008).value

    PHX_D48CL_PCI32 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x4008).value
    PHX_D48CL_PCI64 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x7000).value
    PHX_D24CL_PE1_MIR = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x7008).value
    PHX_D48CL_PCI64U = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x7800).value
    PHX_D48CL_PE1 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x7808).value

    PHX_ANALOGUE = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0x8000).value

    PHX_DIGITAL2 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0xC000).value
    PHX_D36_PE4 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0xD808).value
    PHX_D10HDSDI_PE4 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0xE808).value
    PHX_D20HDSDI_PE4 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0xE008).value
    PHX_D48CL_PE4 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0xF008).value
    PHX_D64CL_PE4 = c_int(etPhxFn.PHX_CAMERACONFIG_LOAD | 0xD008).value

    # For backwards compatibility
    PHX_CHANNEL1 = PHX_CHANNEL_A
    PHX_CHANNEL2 = PHX_CHANNEL_B


# /* PHX_Action Definitions
#  * ======================
#  */
class etActionParam:
    PHX_EMASK_SAVE = c_int(etPhxFn.PHX_ACTION | 0x0007).value
    PHX_SAVE_CAM = c_int(etPhxFn.PHX_ACTION | 0x0001).value
    PHX_SAVE_SYS = c_int(etPhxFn.PHX_ACTION | 0x0002).value
    PHX_SAVE_APP = c_int(etPhxFn.PHX_ACTION | 0x0004).value
    PHX_SAVE_ALL = c_int(etPhxFn.PHX_ACTION | 0x0007).value

# For backwards compatibility
etCamConfigSave = etActionParam


# /* Expansion Macros
#  * ===============================
#  */
# #define _PHX_ENUM(_e,_x,_v)   _x = (int) ((ui32) _e | ((ui32) _v << 8 ))

# Define the _PHX_ENUM function
def _PHX_ENUM(_e, _v):
    return c_int(c_uint32(_e).value | (c_uint32(_v).value << 8)).value

class etParam:
    PHX_PARAM_MASK = c_int(0xffffff00).value
    PHX_INVALID_PARAM = 0
    PHX_CACHE_FLUSH = 1
    PHX_FORCE_REWRITE = 2

    PHX_ACQ_CONTINUOUS = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 1)
    PHX_ACQ_NUM_BUFFERS = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 2)
    PHX_ACQ_SKIP = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 3)
    PHX_FGTRIG_SRC = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 4)
    PHX_FGTRIG_MODE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 5)
    PHX_ACQ_FIELD_MODE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 6)
    PHX_ACQ_XSUB = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 7)
    PHX_ACQ_YSUB = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 8)

    PHX_CAM_ACTIVE_XLENGTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 10)
    PHX_CAM_ACTIVE_YLENGTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 11)
    PHX_CAM_ACTIVE_XOFFSET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 12)
    PHX_CAM_ACTIVE_YOFFSET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 13)
    PHX_CAM_CLOCK_POLARITY = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 14)
    PHX_CAM_FORMAT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 15)
    PHX_CAM_NUM_TAPS = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 16)
    PHX_CAM_SRC_DEPTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 17)
    PHX_CAM_SRC_COL = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 18)
    PHX_CAM_HTAP_DIR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 19)
    PHX_CAM_HTAP_TYPE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 20)
    PHX_CAM_HTAP_NUM = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 21)
    PHX_CAM_VTAP_DIR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 22)
    PHX_CAM_VTAP_TYPE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 23)
    PHX_CAM_VTAP_NUM = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 24)
    PHX_CAM_TYPE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 25)
    PHX_CAM_XBINNING = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 26)
    PHX_CAM_YBINNING = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 27)
    PHX_COMMS_DATA = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 28)
    PHX_COMMS_FLOW = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 29)
    PHX_COMMS_INCOMING = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 30)
    PHX_COMMS_OUTGOING = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 31)
    PHX_COMMS_PARITY = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 32)
    PHX_COMMS_SPEED = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 33)
    PHX_COMMS_STANDARD = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 34)
    PHX_COMMS_STOP = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 35)
    PHX_DATASRC = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 36)
    PHX_DATASTREAM_VALID = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 37)
    PHX_BUS_FORMAT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 38)
    PHX_DST_PTR_TYPE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 39)
    PHX_DST_PTRS_VIRT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 40)
    PHX_DUMMY_PARAM = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 41)
    PHX_ERROR_FIRST_ERRNUM = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 42)
    PHX_ERROR_FIRST_ERRSTRING = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 43)
    PHX_ERROR_HANDLER = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 44)
    PHX_ERROR_LAST_ERRNUM = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 45)
    PHX_ERROR_LAST_ERRSTRING = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 46)
    PHX_COUNTE1_VALUE_NOW = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 47)

    PHX_NUM_BOARDS = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 61)
    PHX_IO_CCIO_A = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 62)  # Absolute
    PHX_IO_CCIO_A_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 63)
    PHX_IO_CCIO_B = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 64)
    PHX_IO_CCIO_B_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 65)

    PHX_IO_OPTO_SET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 68)
    PHX_IO_OPTO_CLR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 69)
    PHX_IO_OPTO = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 70)
    PHX_IO_TTL_A = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 71)
    PHX_IO_TTL_A_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 72)
    PHX_IO_TTL_B = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 73)
    PHX_IO_TTL_B_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 74)
    PHX_TIMEOUT_CAPTURE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 75)
    PHX_TIMEOUT_DMA = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 76)
    PHX_TIMEOUT_TRIGGER = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 77)
    PHX_INTRPT_SET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 78)
    PHX_INTRPT_CLR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 79)
    PHX_REV_HW = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 80)
    PHX_REV_HW_MAJOR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 81)
    PHX_REV_HW_MINOR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 82)
    PHX_REV_SW = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 83)
    PHX_REV_SW_MAJOR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 84)
    PHX_REV_SW_MINOR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 85)
    PHX_REV_SW_SUBMINOR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 86)
    PHX_ROI_DST_XOFFSET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 87)
    PHX_ROI_DST_YOFFSET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 88)
    PHX_ROI_SRC_XOFFSET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 89)
    PHX_ROI_SRC_YOFFSET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 90)
    PHX_ROI_XLENGTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 91)
    PHX_ROI_YLENGTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 92)
    PHX_BUF_DST_XLENGTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 93)
    PHX_BUF_DST_YLENGTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 94)
    PHX_ACQ_STATUS = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 95)

    PHX_BOARD_PROPERTIES = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 102)
    PHX_ROI_XLENGTH_SCALED = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 103)
    PHX_ROI_YLENGTH_SCALED = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 104)
    PHX_BUF_SET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 105)
    PHX_BUF_SET_COLOUR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 106)
    PHX_LUT_COUNT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 107)
    PHX_LUT_INFO = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 108)
    PHX_REV_HW_SUBMINOR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 109)
    PHX_LUT_CORRECT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 110)
    PHX_LINETRIG_SRC = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 111)
    PHX_LINETRIG_TIMER_CTRL = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 112)
    PHX_TIMERA1_PERIOD = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 113)
    PHX_CAMTRIG_SRC = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 114)
    PHX_EXP_CTRLIO_1 = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 115)
    PHX_TIMERM1_WIDTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 116)
    PHX_EXP_CTRLIO_2 = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 117)
    PHX_TIMERM2_WIDTH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 118)
    PHX_EXP_LINESTART = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 119)
    PHX_FGTRIG_DELAY_MODE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 120)
    PHX_TIMERD1_VALUE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 121)
    PHX_EVENTCOUNT_SRC = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 122)
    PHX_EVENTGATE_SRC = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 123)
    PHX_CAM_HTAP_ORDER = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 124)
    PHX_CAM_VTAP_ORDER = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 125)
    PHX_EVENT_CONTEXT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 126)
    PHX_CAM_DATA_VALID = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 127)
    PHX_COUNT_BUFFER_READY = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 128)
    PHX_COUNT_BUFFER_READY_NOW = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 129)
    PHX_BIT_SHIFT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 130)
    PHX_IO_CCIO = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 131)  # Relative
    PHX_IO_CCIO_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 132)
    PHX_IO_TTL = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 133)  # Relative
    PHX_IO_TTL_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 134)
    PHX_IO_OPTO_A = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 135)  # Absolute
    PHX_IO_OPTO_B = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 136)
    PHX_IO_TIMER_A1_PERIOD = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 137)  # Absolute
    PHX_IO_TIMER_A2_PERIOD = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 138)
    PHX_IO_TIMER_B1_PERIOD = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 139)  # Absolute
    PHX_IO_TIMER_B2_PERIOD = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 140)
    PHX_IO_OPTO_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 141)
    PHX_IO_OPTO_A_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 142)
    PHX_IO_OPTO_B_OUT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 143)
    PHX_FGTRIG_ALIGN = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 144)
    PHX_DST_ENDIAN = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 145)
    PHX_ACQ_CHAIN = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 146)
    PHX_ACQ_BLOCKING = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 147)
    PHX_DST_PTRS_PHYS32 = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 148)
    PHX_BOARD_INFO = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 149)
    PHX_DATARATE_TEST = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 150)
    PHX_CAM_CLOCK_MAX = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 151)
    PHX_COUNTE1_VALUE_DB = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 152)
    PHX_CHAN_SYNC_MODE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 153)
    PHX_ACQ_BUFFER_START = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 154)
    PHX_LUT_BYPASS = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 155)
    PHX_COMMS_PORT_NAME = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 156)
    PHX_CVB_PARAM = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 157)
    PHX_USR_FORMAT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 158)
    PHX_ACQ_AUTO_RESTART = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 159)
    PHX_ACQ_HSCALE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 160)
    PHX_MERGE_CHAN = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 161)
    PHX_MERGE_INTRPT_SET = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 162)
    PHX_MERGE_INTRPT_CLR = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 163)
    PHX_CLSER_INDEX = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 164)
    PHX_FIFO_BUFFER_COUNT = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 165)
    PHX_REV_FW_FLASH = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 166)
    PHX_REV_FW_LIB = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 167)
    PHX_PCIE_INFO = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 168)
    PHX_TAP_MODE = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 169)
    PHX_ACQ_IMAGES_PER_BUFFER = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 170)
    PHX_DST_PTRS_PHYS64 = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 171)
    PHX_CAM_VTAP_INTERLEAVE_NUM = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 172)
    PHX_REV_DRV = _PHX_ENUM(etPhxFn.PHX_SETANDGET, 173)

    PHX_IO_CCOUT_A = PHX_IO_CCIO_A
    PHX_IO_CCOUT_B = PHX_IO_CCIO_B
    PHX_IO_CCOUT = PHX_IO_CCIO
    PHX_MASK_CCIO = c_int(0x00000003).value
    PHX_MASK_CCOUT = c_int(0x0000000f).value
    PHX_MASK_OPTO = c_int(0x0000000f).value

    PHX_CONFIG_FILE = _PHX_ENUM(etPhxFn.PHX_PRE_OPEN, 1)
    PHX_BOARD_VARIANT = _PHX_ENUM(etPhxFn.PHX_PRE_OPEN, 2)
    PHX_BOARD_NUMBER = _PHX_ENUM(etPhxFn.PHX_PRE_OPEN, 3)
    PHX_CHANNEL_NUMBER = _PHX_ENUM(etPhxFn.PHX_PRE_OPEN, 4)
    PHX_CONFIG_MODE = _PHX_ENUM(etPhxFn.PHX_PRE_OPEN, 5)
    PHX_CONFIG_FLUSH = _PHX_ENUM(etPhxFn.PHX_PRE_OPEN, 6)
    PHX_BOARD_BUS_ADDRESS = _PHX_ENUM(etPhxFn.PHX_PRE_OPEN, 7)

    PHX_CXP_INFO = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 1)
    PHX_CXP_BITRATE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 2)
    PHX_CXP_POCXP = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 3)
    PHX_CXP_DISCOVERY = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 4)
    PHX_CXP_LINKTEST_UPLINK_OK = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 5)
    PHX_CXP_LINKTEST_UPLINK_ERR = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 6)
    PHX_CXP_LINKTEST_DOWNLINK_OK = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 7)
    PHX_CXP_LINKTEST_DOWNLINK_ERR = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 8)
    PHX_CXP_ERRCOUNT_LINK_LOSS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 9)
    PHX_CXP_ERRCOUNT_8B10B = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 10)
    PHX_CXP_ERRCOUNT_CRC_STREAM = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 11)
    PHX_CXP_ERRCOUNT_CRC_CTRL = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 12)
    PHX_CXP_ERRCOUNT_CRC_EVENT = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 13)
    PHX_CAMERA_POWER = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 15)
    PHX_CXP_BITRATE_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 16)
    PHX_CXP_POCXP_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 17)
    PHX_CXP_DISCOVERY_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 18)
    PHX_CXP_UPLINK_TEST = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 19)
    PHX_CXP_DOWNLINK_TEST = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 20)
    PHX_IO_422IN_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 21)
    PHX_IO_422IN_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 22)
    PHX_IO_422IN_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 23)
    PHX_IO_422IN_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 24)
    PHX_IO_422IN_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 25)
    PHX_IO_OPTOIN_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 26)
    PHX_IO_OPTOIN_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 27)
    PHX_IO_OPTOIN_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 28)
    PHX_IO_OPTOIN_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 29)
    PHX_IO_OPTOIN_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 30)
    PHX_IO_TTLIN_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 31)
    PHX_IO_TTLIN_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 32)
    PHX_IO_TTLIN_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 33)
    PHX_IO_TTLIN_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 34)
    PHX_IO_TTLIN_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 35)
    PHX_IO_422OUT_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 36)
    PHX_IO_422OUT_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 37)
    PHX_IO_422OUT_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 38)
    PHX_IO_422OUT_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 39)
    PHX_IO_422OUT_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 40)
    PHX_IO_OPTOOUT_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 41)
    PHX_IO_OPTOOUT_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 42)
    PHX_IO_OPTOOUT_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 43)
    PHX_IO_OPTOOUT_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 44)
    PHX_IO_OPTOOUT_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 45)
    PHX_IO_TTLOUT_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 46)
    PHX_IO_TTLOUT_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 47)
    PHX_IO_TTLOUT_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 48)
    PHX_IO_TTLOUT_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 49)
    PHX_IO_TTLOUT_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 50)
    PHX_IO_CCOUT_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 51)
    PHX_IO_CCOUT_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 52)
    PHX_IO_CCOUT_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 53)
    PHX_IO_CCOUT_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 54)
    PHX_IO_CCOUT_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 55)
    PHX_CAMTRIG_ENCODER_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 56)
    PHX_CAMTRIG_ENCODER_SRC = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 57)
    PHX_CAMTRIG_MULTIPLIER = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 58)
    PHX_CAMTRIG_DIVIDER = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 59)
    PHX_CAMTRIG_CXPTRIG_SRC = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 60)
    PHX_CAMTRIG_CXPTRIG_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 61)
    PHX_CAMTRIG_DELAY_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 62)
    PHX_TIMERD2_VALUE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 63)
    PHX_FW_NUM_DESIGNS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 64)
    PHX_FW_DESIGN_LIB = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 65)
    PHX_FW_DESIGN_PROG = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 66)
    PHX_FW_DESIGN_FLASH = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 67)
    PHX_STR_DESIGN_LIB = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 68)
    PHX_STR_DESIGN_FLASH = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 69)
    PHX_FGTRIG_FILTER_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 70)
    PHX_CAMTRIG_FILTER_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 71)
    PHX_CAMTRIG_ENCODER_FILTER_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 72)
    PHX_TIMERA1_PERIOD_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 73)
    PHX_TIMERD1FG_VALUE_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 74)
    PHX_TIMERM1_WIDTH_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 75)
    PHX_TIMERM2_WIDTH_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 76)
    PHX_TIMERD2_VALUE_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 77)
    PHX_FPGA_CORE_TEMP = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 78)
    PHX_CAMTRIG_DELAY_MODE_D1CAM = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 79)
    PHX_CAMTRIG_DELAY_MODE_D2CAM = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 80)
    PHX_TIMERD1FG_COUNT = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 81)
    PHX_TIMERA1_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 82)
    PHX_TIMERA1_PULSE_COUNT = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 83)
    PHX_TIMERA1_SWTRIG = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 84)
    PHX_TIMERD1CAM_VALUE_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 85)
    PHX_TIMERD2CAM_VALUE_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 86)
    PHX_IMAGE_TIMESTAMP_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 87)
    PHX_DST_ALIGNMENT = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 88)
    PHX_CXP_HEADER = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 90)
    PHX_IRIG_TRIG_COUNT = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 91)
    PHX_IO_24VOUT_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 92)
    PHX_IO_24VOUT_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 93)
    PHX_IO_24VOUT_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 94)
    PHX_IO_24VOUT_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 95)
    PHX_IO_24VOUT_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 96)
    PHX_IO_24VIN_CHX = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 97)
    PHX_IO_24VIN_CH1 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 98)
    PHX_IO_24VIN_CH2 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 99)
    PHX_IO_24VIN_CH3 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 100)
    PHX_IO_24VIN_CH4 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 101)
    PHX_IO_24VIN_CH5 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 102)
    PHX_IO_24VIN_CH6 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 103)
    PHX_IO_24VIN_CH7 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 104)
    PHX_IO_24VIN_CH8 = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 105)
    PHX_SERIAL_NUMBER = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 106)
    PHX_RETAIN_CXP_DISCOVERY = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 107)
    PHX_CL_LVAL_FILTER = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 108)
    PHX_CXP_ERRCOUNT_DUP_FIXED = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 109)
    PHX_CXP_ERRCOUNT_DUP_NFIXED = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 110)
    PHX_CXP_ERRCOUNT_FEC_FIXED = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 111)
    PHX_CXP_ERRCOUNT_FEC_NFIXED = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 112)
    PHX_ACQ_BUFFER_MEMSET_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 113)
    PHX_ACQ_BUFFER_MEMSET_VALUE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 114)
    PHX_CL_POCL_MODE = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 115)
    PHX_TIMERA1_TRIG_SRC = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 116)
    PHX_TIMERA1_TRIG_FILTER_NS = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 117)
    PHX_MEZZANINE_GUID = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 118)
    PHX_USER_ID = _PHX_ENUM(etPhxFn.PHX_FBD_SETANDGET, 119)

    PHX_CL_INFO = PHX_CXP_INFO

# recall
# def _PHX_ENUM(_e, _v):
#     return c_int(c_uint32(_e).value | (c_uint32(_v).value << 8)).value


# etAction enum
class etAction:
    PHX_CONFIG_SAVE = _PHX_ENUM(etPhxFn.PHX_ACTION, 1)
    PHX_FIRMWARE_PROG = _PHX_ENUM(etPhxFn.PHX_ACTION, 2)

# etControlPort enum
class etControlPort:
    PHX_COMMS_PORT = _PHX_ENUM(etPhxFn.PHX_CONTROL, 0x0000)
    PHX_REGISTER_HOST = _PHX_ENUM(etPhxFn.PHX_CONTROL, 0x0001)
    PHX_REGISTER_DEVICE = _PHX_ENUM(etPhxFn.PHX_CONTROL, 0x0002)

# etComParam enum
class etComParam:
    PHX_COM_NUM_PORTS = _PHX_ENUM(etPhxFn.PHX_COM, 0x0000)
    PHX_COM_CLSER_CONFIG = _PHX_ENUM(etPhxFn.PHX_COM, 0x0001)
    PHX_COM_WIN_CONFIG = _PHX_ENUM(etPhxFn.PHX_COM, 0x0002)
    PHX_COM_GET_HANDLE = _PHX_ENUM(etPhxFn.PHX_COM, 0x0003)
    PHX_COM_GET_BOARD_CHAN_INDEX = _PHX_ENUM(etPhxFn.PHX_COM, 0x0004)

if __name__ == '__main__':
   print(etParam.PHX_ACQ_CONTINUOUS)